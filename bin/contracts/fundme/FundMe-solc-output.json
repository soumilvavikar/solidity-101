{
    "contracts": {
        "c:/workspaces/solidity-101/contracts/fundme/FundMe.sol": {
            "FundMe": {
                "abi": [
                    {
                        "inputs": [],
                        "name": "fund",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "minimumUSD",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "myVal",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ],
                "devdoc": {
                    "kind": "dev",
                    "methods": {},
                    "version": 1
                },
                "evm": {
                    "bytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "linkReferences": {},
                        "object": "60808060405234601e5760015f55600560015561012790816100238239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c9081633430a88c1460d957508063b60d42881460575763ed32ca32146039575f80fd5b346053575f36600319011260535760205f54604051908152f35b5f80fd5b5f3660031901126053575f546002810180911160c5575f55670de0b6b3a7640000341115608057005b60405162461bcd60e51b815260206004820152601960248201527f4469646e27742073656e6420656e6f756768204554482e2e2e000000000000006044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b346053575f3660031901126053576020906001548152f3fea2646970667358221220305fece9e27e90a8571e10077780ef0bb707c65627c7ac5abb5f87d6fac33f7464736f6c634300081b0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1E JUMPI PUSH1 0x1 PUSH0 SSTORE PUSH1 0x5 PUSH1 0x1 SSTORE PUSH2 0x127 SWAP1 DUP2 PUSH2 0x23 DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3430A88C EQ PUSH1 0xD9 JUMPI POP DUP1 PUSH4 0xB60D4288 EQ PUSH1 0x57 JUMPI PUSH4 0xED32CA32 EQ PUSH1 0x39 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x53 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH1 0x20 PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH0 SLOAD PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH1 0xC5 JUMPI PUSH0 SSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE GT ISZERO PUSH1 0x80 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469646E27742073656E6420656E6F756768204554482E2E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH1 0x53 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH0 0xEC 0xE9 0xE2 PUSH31 0x90A8571E10077780EF0BB707C65627C7AC5ABB5F87D6FAC33F7464736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
                        "sourceMap": "190:703:0:-:0;;;;;;;236:1;;190:703;318:1;236;190:703;;;;;;;;;;;"
                    },
                    "deployedBytecode": {
                        "functionDebugData": {},
                        "generatedSources": [],
                        "immutableReferences": {},
                        "linkReferences": {},
                        "object": "60808060405260043610156011575f80fd5b5f3560e01c9081633430a88c1460d957508063b60d42881460575763ed32ca32146039575f80fd5b346053575f36600319011260535760205f54604051908152f35b5f80fd5b5f3660031901126053575f546002810180911160c5575f55670de0b6b3a7640000341115608057005b60405162461bcd60e51b815260206004820152601960248201527f4469646e27742073656e6420656e6f756768204554482e2e2e000000000000006044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b346053575f3660031901126053576020906001548152f3fea2646970667358221220305fece9e27e90a8571e10077780ef0bb707c65627c7ac5abb5f87d6fac33f7464736f6c634300081b0033",
                        "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3430A88C EQ PUSH1 0xD9 JUMPI POP DUP1 PUSH4 0xB60D4288 EQ PUSH1 0x57 JUMPI PUSH4 0xED32CA32 EQ PUSH1 0x39 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x53 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH1 0x20 PUSH0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH0 SLOAD PUSH1 0x2 DUP2 ADD DUP1 SWAP2 GT PUSH1 0xC5 JUMPI PUSH0 SSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE GT ISZERO PUSH1 0x80 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469646E27742073656E6420656E6F756768204554482E2E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH1 0x53 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x53 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH0 0xEC 0xE9 0xE2 PUSH31 0x90A8571E10077780EF0BB707C65627C7AC5ABB5F87D6FAC33F7464736F6C63 NUMBER STOP ADDMOD SHL STOP CALLER ",
                        "sourceMap": "190:703:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;190:703:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;190:703:0;;;;;;560:1;190:703;;;;;;;;;728:4;716:9;:16;190:703;;;;;;;-1:-1:-1;;;190:703:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;190:703:0;;;;;;290:29;190:703;;;"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "59000",
                            "executionCost": "44328",
                            "totalCost": "103328"
                        },
                        "external": {
                            "fund()": "24483",
                            "minimumUSD()": "2248",
                            "myVal()": "2296"
                        }
                    },
                    "methodIdentifiers": {
                        "fund()": "b60d4288",
                        "minimumUSD()": "3430a88c",
                        "myVal()": "ed32ca32"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myVal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This method will allow users to send $, have a check for minimum $ that can be sent IMPORTANT: - How do we send ETH to the contract\"}},\"notice\":\"This contract will do the following: - Get funds - Withdraw funds - Set minimum funding value in USD\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/workspaces/solidity-101/contracts/fundme/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/workspaces/solidity-101/contracts/fundme/FundMe.sol\":{\"keccak256\":\"0xcc8576bf7e9749451d433798df4577fdb654e3be771ed680352b8614315ffcf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6712b3739a4db87752b6fe30bd309ac19b35bc88c47f3c26d1e312d8e4c3773\",\"dweb:/ipfs/QmTTKFm1C7VfUtzZkWiJeQZGrGECrBTtirj8g2tVyq92Fy\"]}},\"version\":1}",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 5,
                            "contract": "c:/workspaces/solidity-101/contracts/fundme/FundMe.sol:FundMe",
                            "label": "myVal",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 8,
                            "contract": "c:/workspaces/solidity-101/contracts/fundme/FundMe.sol:FundMe",
                            "label": "minimumUSD",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "userdoc": {
                    "kind": "user",
                    "methods": {
                        "fund()": {
                            "notice": "This method will allow users to send $, have a check for minimum $ that can be sent IMPORTANT: - How do we send ETH to the contract"
                        }
                    },
                    "notice": "This contract will do the following: - Get funds - Withdraw funds - Set minimum funding value in USD",
                    "version": 1
                }
            }
        }
    },
    "sources": {
        "c:/workspaces/solidity-101/contracts/fundme/FundMe.sol": {
            "ast": {
                "absolutePath": "c:/workspaces/solidity-101/contracts/fundme/FundMe.sol",
                "exportedSymbols": {
                    "FundMe": [
                        28
                    ]
                },
                "id": 29,
                "license": "MIT",
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.8",
                            ".18"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "35:24:0"
                    },
                    {
                        "abstract": false,
                        "baseContracts": [],
                        "canonicalName": "FundMe",
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": {
                            "id": 2,
                            "nodeType": "StructuredDocumentation",
                            "src": "63:125:0",
                            "text": " This contract will do the following:\n - Get funds\n - Withdraw funds\n - Set minimum funding value in USD"
                        },
                        "fullyImplemented": true,
                        "id": 28,
                        "linearizedBaseContracts": [
                            28
                        ],
                        "name": "FundMe",
                        "nameLocation": "199:6:0",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "constant": false,
                                "functionSelector": "ed32ca32",
                                "id": 5,
                                "mutability": "mutable",
                                "name": "myVal",
                                "nameLocation": "228:5:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 28,
                                "src": "213:24:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 3,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "213:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "31",
                                    "id": 4,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "236:1:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "functionSelector": "3430a88c",
                                "id": 8,
                                "mutability": "mutable",
                                "name": "minimumUSD",
                                "nameLocation": "305:10:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 28,
                                "src": "290:29:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 6,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "290:7:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "value": {
                                    "hexValue": "35",
                                    "id": 7,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "318:1:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_5_by_1",
                                        "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                },
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 26,
                                    "nodeType": "Block",
                                    "src": "533:357:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "id": 16,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "id": 12,
                                                    "name": "myVal",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 5,
                                                    "src": "544:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 15,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 13,
                                                        "name": "myVal",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5,
                                                        "src": "552:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                        "hexValue": "32",
                                                        "id": 14,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "560:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_2_by_1",
                                                            "typeString": "int_const 2"
                                                        },
                                                        "value": "2"
                                                    },
                                                    "src": "552:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "544:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 17,
                                            "nodeType": "ExpressionStatement",
                                            "src": "544:17:0"
                                        },
                                        {
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 22,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "expression": {
                                                                "id": 19,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "716:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 20,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "720:5:0",
                                                            "memberName": "value",
                                                            "nodeType": "MemberAccess",
                                                            "src": "716:9:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": ">",
                                                        "rightExpression": {
                                                            "hexValue": "31653138",
                                                            "id": 21,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "728:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                                "typeString": "int_const 1000000000000000000"
                                                            },
                                                            "value": "1e18"
                                                        },
                                                        "src": "716:16:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "hexValue": "4469646e27742073656e6420656e6f756768204554482e2e2e",
                                                        "id": 23,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "734:27:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_f718e936e938a8e3148da1323ee8534534d90aa4ceade34acfec0bf0e20051af",
                                                            "typeString": "literal_string \"Didn't send enough ETH...\""
                                                        },
                                                        "value": "Didn't send enough ETH..."
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_f718e936e938a8e3148da1323ee8534534d90aa4ceade34acfec0bf0e20051af",
                                                            "typeString": "literal_string \"Didn't send enough ETH...\""
                                                        }
                                                    ],
                                                    "id": 18,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        4294967278,
                                                        4294967278,
                                                        4294967278
                                                    ],
                                                    "referencedDeclaration": 4294967278,
                                                    "src": "708:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 24,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "708:54:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 25,
                                            "nodeType": "ExpressionStatement",
                                            "src": "708:54:0"
                                        }
                                    ]
                                },
                                "documentation": {
                                    "id": 9,
                                    "nodeType": "StructuredDocumentation",
                                    "src": "328:168:0",
                                    "text": " This method will allow users to send $, have a check for minimum $ that can be sent\n IMPORTANT:\n - How do we send ETH to the contract"
                                },
                                "functionSelector": "b60d4288",
                                "id": 27,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "fund",
                                "nameLocation": "511:4:0",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 10,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "515:2:0"
                                },
                                "returnParameters": {
                                    "id": 11,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "533:0:0"
                                },
                                "scope": 28,
                                "src": "502:388:0",
                                "stateMutability": "payable",
                                "virtual": false,
                                "visibility": "public"
                            }
                        ],
                        "scope": 29,
                        "src": "190:703:0",
                        "usedErrors": [],
                        "usedEvents": []
                    }
                ],
                "src": "35:975:0"
            },
            "id": 0
        }
    }
}